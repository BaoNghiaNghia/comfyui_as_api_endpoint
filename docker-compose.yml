version: '3.9'

x-service-base:
  &service-base
  build:
    context: .
    dockerfile: Dockerfile
  volumes:
    - .:/app
    - "${OUTPUT_PATH:-/tmp/output}:/thumbnail_img"
  networks:
    - external_network

services:
  web:
    <<: *service-base
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    volumes:
      - .:/app
      - /app/__pycache__/ # Prevent writing bytecode
    command: ["uvicorn", "backend.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - external_network

  celery_worker:
    <<: *service-base
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app
    command: bash -c "watchmedo auto-restart --directory=/app --pattern=*.py -- celery -A backend.celery_app worker --loglevel=info"

  celery_beat:
    <<: *service-base
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app
    command: bash -c "watchmedo auto-restart --directory=/app --pattern=*.py -- celery -A backend.celery_app beat --loglevel=info"

  flower:
    <<: *service-base
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    ports:
      - "5555:5555"
    volumes:
      - .:/app
    command: bash -c "watchmedo auto-restart --directory=/app --pattern=*.py -- celery -A backend.celery_app flower --port=5555"

networks:
  external_network:
    driver: bridge
